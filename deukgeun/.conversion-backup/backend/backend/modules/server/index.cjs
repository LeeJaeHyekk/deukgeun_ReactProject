"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.logMemoryUsage = exports.getMemoryUsage = exports.clearPerformanceMetrics = exports.logPerformanceMetrics = exports.getPerformanceMetricsByName = exports.getAllPerformanceMetrics = exports.measureAsyncPerformance = exports.measurePerformance = exports.endPerformanceTimer = exports.startPerformanceTimer = exports.reloadAllLazyModules = exports.reloadLazyModule = exports.logLazyModuleStatus = exports.getLazyModuleStatus = exports.lazyLoadLogger = exports.lazyLoadDatabase = exports.lazyLoad = exports.setCacheTTL = exports.getCacheStatus = exports.invalidateCache = exports.getCachedValidationResult = exports.getCachedServerConfig = exports.handleServerStartupError = exports.initializeAndStartServer = exports.setupGracefulShutdown = exports.startExpressServer = exports.logDatabaseStatus = exports.isDatabaseConnected = exports.connectDatabase = exports.shouldStartServer = exports.validateEnvironmentVariables = exports.logServerConfig = exports.createServerConfig = void 0;
var ServerConfig_1 = require("./ServerConfig.cjs.cjs");
Object.defineProperty(exports, "createServerConfig", { enumerable: true, get: function () { return ServerConfig_1.createServerConfig; } });
Object.defineProperty(exports, "logServerConfig", { enumerable: true, get: function () { return ServerConfig_1.logServerConfig; } });
var ServerValidator_1 = require("./ServerValidator.cjs.cjs");
Object.defineProperty(exports, "validateEnvironmentVariables", { enumerable: true, get: function () { return ServerValidator_1.validateEnvironmentVariables; } });
Object.defineProperty(exports, "shouldStartServer", { enumerable: true, get: function () { return ServerValidator_1.shouldStartServer; } });
var DatabaseManager_1 = require("./DatabaseManager.cjs.cjs");
Object.defineProperty(exports, "connectDatabase", { enumerable: true, get: function () { return DatabaseManager_1.connectDatabase; } });
Object.defineProperty(exports, "isDatabaseConnected", { enumerable: true, get: function () { return DatabaseManager_1.isDatabaseConnected; } });
Object.defineProperty(exports, "logDatabaseStatus", { enumerable: true, get: function () { return DatabaseManager_1.logDatabaseStatus; } });
var ServerStarter_1 = require("./ServerStarter.cjs.cjs");
Object.defineProperty(exports, "startExpressServer", { enumerable: true, get: function () { return ServerStarter_1.startExpressServer; } });
Object.defineProperty(exports, "setupGracefulShutdown", { enumerable: true, get: function () { return ServerStarter_1.setupGracefulShutdown; } });
var ServerManager_1 = require("./ServerManager.cjs.cjs");
Object.defineProperty(exports, "initializeAndStartServer", { enumerable: true, get: function () { return ServerManager_1.initializeAndStartServer; } });
Object.defineProperty(exports, "handleServerStartupError", { enumerable: true, get: function () { return ServerManager_1.handleServerStartupError; } });
var ConfigCache_1 = require("./ConfigCache.cjs.cjs");
Object.defineProperty(exports, "getCachedServerConfig", { enumerable: true, get: function () { return ConfigCache_1.getCachedServerConfig; } });
Object.defineProperty(exports, "getCachedValidationResult", { enumerable: true, get: function () { return ConfigCache_1.getCachedValidationResult; } });
Object.defineProperty(exports, "invalidateCache", { enumerable: true, get: function () { return ConfigCache_1.invalidateCache; } });
Object.defineProperty(exports, "getCacheStatus", { enumerable: true, get: function () { return ConfigCache_1.getCacheStatus; } });
Object.defineProperty(exports, "setCacheTTL", { enumerable: true, get: function () { return ConfigCache_1.setCacheTTL; } });
var LazyLoader_1 = require("./LazyLoader.cjs.cjs");
Object.defineProperty(exports, "lazyLoad", { enumerable: true, get: function () { return LazyLoader_1.lazyLoad; } });
Object.defineProperty(exports, "lazyLoadDatabase", { enumerable: true, get: function () { return LazyLoader_1.lazyLoadDatabase; } });
Object.defineProperty(exports, "lazyLoadLogger", { enumerable: true, get: function () { return LazyLoader_1.lazyLoadLogger; } });
Object.defineProperty(exports, "getLazyModuleStatus", { enumerable: true, get: function () { return LazyLoader_1.getLazyModuleStatus; } });
Object.defineProperty(exports, "logLazyModuleStatus", { enumerable: true, get: function () { return LazyLoader_1.logLazyModuleStatus; } });
Object.defineProperty(exports, "reloadLazyModule", { enumerable: true, get: function () { return LazyLoader_1.reloadLazyModule; } });
Object.defineProperty(exports, "reloadAllLazyModules", { enumerable: true, get: function () { return LazyLoader_1.reloadAllLazyModules; } });
var PerformanceMonitor_1 = require("./PerformanceMonitor.cjs.cjs");
Object.defineProperty(exports, "startPerformanceTimer", { enumerable: true, get: function () { return PerformanceMonitor_1.startPerformanceTimer; } });
Object.defineProperty(exports, "endPerformanceTimer", { enumerable: true, get: function () { return PerformanceMonitor_1.endPerformanceTimer; } });
Object.defineProperty(exports, "measurePerformance", { enumerable: true, get: function () { return PerformanceMonitor_1.measurePerformance; } });
Object.defineProperty(exports, "measureAsyncPerformance", { enumerable: true, get: function () { return PerformanceMonitor_1.measureAsyncPerformance; } });
Object.defineProperty(exports, "getAllPerformanceMetrics", { enumerable: true, get: function () { return PerformanceMonitor_1.getAllPerformanceMetrics; } });
Object.defineProperty(exports, "getPerformanceMetricsByName", { enumerable: true, get: function () { return PerformanceMonitor_1.getPerformanceMetricsByName; } });
Object.defineProperty(exports, "logPerformanceMetrics", { enumerable: true, get: function () { return PerformanceMonitor_1.logPerformanceMetrics; } });
Object.defineProperty(exports, "clearPerformanceMetrics", { enumerable: true, get: function () { return PerformanceMonitor_1.clearPerformanceMetrics; } });
Object.defineProperty(exports, "getMemoryUsage", { enumerable: true, get: function () { return PerformanceMonitor_1.getMemoryUsage; } });
Object.defineProperty(exports, "logMemoryUsage", { enumerable: true, get: function () { return PerformanceMonitor_1.logMemoryUsage; } });
