# ============================================================================
# Docker Compose Configuration for Deukgeun on AWS EC2
# ============================================================================

version: '3.8'

services:
  # MySQL 데이터베이스
  mysql:
    image: mysql:8.0
    container_name: deukgeun-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./src/backend/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - '3306:3306'
    networks:
      - deukgeun-network
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
      timeout: 20s
      retries: 10

  # 백엔드 API 서버
  backend:
    build:
      context: ./src/backend
      dockerfile: Dockerfile
    container_name: deukgeun-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ACCESS_SECRET=${JWT_ACCESS_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - PORT=5000
    ports:
      - '5000:5000' # 백엔드 API 포트
    volumes:
      - ./src/backend/uploads:/app/uploads
      - ./src/backend/logs:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - deukgeun-network
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--no-verbose',
          '--tries=1',
          '--spider',
          'http://localhost:5000/health',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 프론트엔드 React 앱
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: deukgeun-frontend
    restart: unless-stopped
    ports:
      - '80:80' # HTTP 포트
      - '443:443' # HTTPS 포트 (SSL 인증서 설정 시)
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - deukgeun-network
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--no-verbose',
          '--tries=1',
          '--spider',
          'http://localhost:80/',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  mysql_data:
    driver: local

networks:
  deukgeun-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
