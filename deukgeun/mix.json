{
  "mapping": [
    {
      "entity": "User",
      "table": "users",
      "dto": "UserDTO",
      "frontType": "UserType",
      "relations": {
        "userLevel": {
          "type": "OneToOne",
          "target": "UserLevel",
          "dto": "UserLevelDTO",
          "frontType": "UserLevelType"
        },
        "expHistory": {
          "type": "OneToMany",
          "target": "ExpHistory",
          "dto": "ExpHistoryDTO",
          "frontType": "ExpHistoryType"
        },
        "userRewards": {
          "type": "OneToMany",
          "target": "UserReward",
          "dto": "UserRewardDTO",
          "frontType": "UserRewardType"
        },
        "milestones": {
          "type": "OneToMany",
          "target": "Milestone",
          "dto": "MilestoneDTO",
          "frontType": "MilestoneType"
        },
        "userStreaks": {
          "type": "OneToMany",
          "target": "UserStreak",
          "dto": "UserStreakDTO",
          "frontType": "UserStreakType"
        },
        "comments": {
          "type": "OneToMany",
          "target": "Comment",
          "dto": "CommentDTO",
          "frontType": "CommentType"
        },
        "workoutSessions": {
          "type": "OneToMany",
          "target": "WorkoutSession",
          "dto": "WorkoutSessionDTO",
          "frontType": "WorkoutSessionType"
        },
        "workoutPlans": {
          "type": "OneToMany",
          "target": "WorkoutPlan",
          "dto": "WorkoutPlanDTO",
          "frontType": "WorkoutPlanType"
        },
        "workoutGoals": {
          "type": "OneToMany",
          "target": "WorkoutGoal",
          "dto": "WorkoutGoalDTO",
          "frontType": "WorkoutGoalType"
        },
        "workoutStats": {
          "type": "OneToMany",
          "target": "WorkoutStats",
          "dto": "WorkoutStatsDTO",
          "frontType": "WorkoutStatsType"
        },
        "workoutProgress": {
          "type": "OneToMany",
          "target": "WorkoutProgress",
          "dto": "WorkoutProgressDTO",
          "frontType": "WorkoutProgressType"
        },
        "workoutReminders": {
          "type": "OneToMany",
          "target": "WorkoutReminder",
          "dto": "WorkoutReminderDTO",
          "frontType": "WorkoutReminderType"
        },
        "posts": {
          "type": "OneToMany",
          "target": "Post",
          "dto": "PostDTO",
          "frontType": "PostType"
        },
        "likes": {
          "type": "OneToMany",
          "target": "Like",
          "dto": "LikeDTO",
          "frontType": "LikeType"
        }
      },
      "fields": [
        {
          "entityField": "id",
          "dbColumn": "id",
          "dtoField": "id",
          "frontField": "id",
          "type": "number",
          "rules": ["primaryKey", "autoIncrement"]
        },
        {
          "entityField": "email",
          "dbColumn": "email",
          "dtoField": "email",
          "frontField": "email",
          "type": "string",
          "rules": ["unique", "required", "isEmail"]
        },
        {
          "entityField": "password",
          "dbColumn": "password",
          "dtoField": null,
          "frontField": null,
          "type": "string",
          "rules": ["hashed", "private", "exclude"]
        },
        {
          "entityField": "nickname",
          "dbColumn": "nickname",
          "dtoField": "nickname",
          "frontField": "nickname",
          "type": "string",
          "rules": ["unique", "required", "min:2", "max:20"]
        },
        {
          "entityField": "phone",
          "dbColumn": "phone",
          "dtoField": "phone",
          "frontField": "phone",
          "type": "string",
          "rules": ["optional"]
        },
        {
          "entityField": "gender",
          "dbColumn": "gender",
          "dtoField": "gender",
          "frontField": "gender",
          "type": "enum",
          "rules": ["optional", "enum:male,female,other"]
        },
        {
          "entityField": "birthday",
          "dbColumn": "birthday",
          "dtoField": "birthday",
          "frontField": "birthday",
          "type": "Date",
          "rules": ["optional", "date"]
        },
        {
          "entityField": "profileImage",
          "dbColumn": "profile_image",
          "dtoField": "profileImage",
          "frontField": "profileImage",
          "type": "string",
          "rules": ["optional", "isUrl"]
        },
        {
          "entityField": "role",
          "dbColumn": "role",
          "dtoField": "role",
          "frontField": "role",
          "type": "enum",
          "rules": ["required", "enum:user,admin,moderator", "default:user"]
        },
        {
          "entityField": "isActive",
          "dbColumn": "is_active",
          "dtoField": "isActive",
          "frontField": "isActive",
          "type": "boolean",
          "rules": ["required", "default:true"]
        },
        {
          "entityField": "isEmailVerified",
          "dbColumn": "is_email_verified",
          "dtoField": "isEmailVerified",
          "frontField": "isEmailVerified",
          "type": "boolean",
          "rules": ["required", "default:false"]
        },
        {
          "entityField": "isPhoneVerified",
          "dbColumn": "is_phone_verified",
          "dtoField": "isPhoneVerified",
          "frontField": "isPhoneVerified",
          "type": "boolean",
          "rules": ["required", "default:false"]
        },
        {
          "entityField": "name",
          "dbColumn": "name",
          "dtoField": "name",
          "frontField": "name",
          "type": "string",
          "rules": ["optional"]
        },
        {
          "entityField": "username",
          "dbColumn": "username",
          "dtoField": "username",
          "frontField": "username",
          "type": "string",
          "rules": ["optional"]
        },
        {
          "entityField": "lastLoginAt",
          "dbColumn": "last_login_at",
          "dtoField": "lastLoginAt",
          "frontField": "lastLoginAt",
          "type": "Date",
          "rules": ["optional", "readonly"]
        },
        {
          "entityField": "lastActivityAt",
          "dbColumn": "last_activity_at",
          "dtoField": "lastActivityAt",
          "frontField": "lastActivityAt",
          "type": "Date",
          "rules": ["optional", "readonly"]
        },
        {
          "entityField": "loginAttempts",
          "dbColumn": "login_attempts",
          "dtoField": null,
          "frontField": null,
          "type": "number",
          "rules": ["private", "default:0"]
        },
        {
          "entityField": "lockedUntil",
          "dbColumn": "locked_until",
          "dtoField": null,
          "frontField": null,
          "type": "Date",
          "rules": ["private", "optional"]
        },
        {
          "entityField": "createdAt",
          "dbColumn": "created_at",
          "dtoField": "createdAt",
          "frontField": "createdAt",
          "type": "Date",
          "rules": ["readonly", "autoGenerate"]
        },
        {
          "entityField": "updatedAt",
          "dbColumn": "updated_at",
          "dtoField": "updatedAt",
          "frontField": "updatedAt",
          "type": "Date",
          "rules": ["readonly", "autoGenerate"]
        }
      ]
    },
    {
      "entity": "Machine",
      "table": "machines",
      "dto": "MachineDTO",
      "frontType": "MachineType",
      "relations": {},
      "fields": [
        {
          "entityField": "id",
          "dbColumn": "id",
          "dtoField": "id",
          "frontField": "id",
          "type": "number",
          "rules": ["primaryKey", "autoIncrement"]
        },
        {
          "entityField": "machineKey",
          "dbColumn": "machine_key",
          "dtoField": "machineKey",
          "frontField": "machineKey",
          "type": "string",
          "rules": ["unique", "required", "max:100"]
        },
        {
          "entityField": "name",
          "dbColumn": "name",
          "dtoField": "name",
          "frontField": "name",
          "type": "string",
          "rules": ["required", "max:100"]
        },
        {
          "entityField": "nameKo",
          "dbColumn": "name_ko",
          "dtoField": "nameKo",
          "frontField": "nameKo",
          "type": "string",
          "rules": ["optional", "max:100"]
        },
        {
          "entityField": "nameEn",
          "dbColumn": "name_en",
          "dtoField": "nameEn",
          "frontField": "nameEn",
          "type": "string",
          "rules": ["optional", "max:100"]
        },
        {
          "entityField": "imageUrl",
          "dbColumn": "image_url",
          "dtoField": "imageUrl",
          "frontField": "imageUrl",
          "type": "string",
          "rules": ["required", "isUrl", "max:255"]
        },
        {
          "entityField": "shortDesc",
          "dbColumn": "short_desc",
          "dtoField": "shortDesc",
          "frontField": "shortDesc",
          "type": "string",
          "rules": ["required", "max:255"]
        },
        {
          "entityField": "detailDesc",
          "dbColumn": "detail_desc",
          "dtoField": "detailDesc",
          "frontField": "detailDesc",
          "type": "string",
          "rules": ["required"]
        },
        {
          "entityField": "positiveEffect",
          "dbColumn": "positive_effect",
          "dtoField": "positiveEffect",
          "frontField": "positiveEffect",
          "type": "string",
          "rules": ["optional"]
        },
        {
          "entityField": "category",
          "dbColumn": "category",
          "dtoField": "category",
          "frontField": "category",
          "type": "enum",
          "rules": [
            "required",
            "enum:cardio,strength,flexibility,balance,functional,rehabilitation,상체,하체,전신,기타",
            "default:strength"
          ]
        },
        {
          "entityField": "targetMuscles",
          "dbColumn": "target_muscles",
          "dtoField": "targetMuscles",
          "frontField": "targetMuscles",
          "type": "string[]",
          "rules": ["optional", "json"]
        },
        {
          "entityField": "difficulty",
          "dbColumn": "difficulty",
          "dtoField": "difficulty",
          "frontField": "difficulty",
          "type": "enum",
          "rules": [
            "required",
            "enum:beginner,intermediate,advanced,expert,초급,중급,고급",
            "default:beginner"
          ]
        },
        {
          "entityField": "videoUrl",
          "dbColumn": "video_url",
          "dtoField": "videoUrl",
          "frontField": "videoUrl",
          "type": "string",
          "rules": ["optional", "isUrl", "max:255"]
        },
        {
          "entityField": "isActive",
          "dbColumn": "is_active",
          "dtoField": "isActive",
          "frontField": "isActive",
          "type": "boolean",
          "rules": ["required", "default:true"]
        },
        {
          "entityField": "createdAt",
          "dbColumn": "created_at",
          "dtoField": "createdAt",
          "frontField": "createdAt",
          "type": "Date",
          "rules": ["readonly", "autoGenerate"]
        },
        {
          "entityField": "updatedAt",
          "dbColumn": "updated_at",
          "dtoField": "updatedAt",
          "frontField": "updatedAt",
          "type": "Date",
          "rules": ["readonly", "autoGenerate"]
        }
      ]
    },
    {
      "entity": "WorkoutSession",
      "table": "workout_sessions",
      "dto": "WorkoutSessionDTO",
      "frontType": "WorkoutSessionType",
      "relations": {
        "user": {
          "type": "ManyToOne",
          "target": "User",
          "dto": "UserDTO",
          "frontType": "UserType"
        },
        "workoutPlan": {
          "type": "ManyToOne",
          "target": "WorkoutPlan",
          "dto": "WorkoutPlanDTO",
          "frontType": "WorkoutPlanType"
        },
        "gym": {
          "type": "ManyToOne",
          "target": "Gym",
          "dto": "GymDTO",
          "frontType": "GymType"
        },
        "exerciseSets": {
          "type": "OneToMany",
          "target": "ExerciseSet",
          "dto": "ExerciseSetDTO",
          "frontType": "ExerciseSetType"
        }
      },
      "fields": [
        {
          "entityField": "id",
          "dbColumn": "id",
          "dtoField": "id",
          "frontField": "id",
          "type": "number",
          "rules": ["primaryKey", "autoIncrement"]
        },
        {
          "entityField": "userId",
          "dbColumn": "user_id",
          "dtoField": "userId",
          "frontField": "userId",
          "type": "number",
          "rules": ["required", "foreignKey"]
        },
        {
          "entityField": "planId",
          "dbColumn": "plan_id",
          "dtoField": "planId",
          "frontField": "planId",
          "type": "number",
          "rules": ["optional", "foreignKey"]
        },
        {
          "entityField": "gymId",
          "dbColumn": "gym_id",
          "dtoField": "gymId",
          "frontField": "gymId",
          "type": "number",
          "rules": ["optional", "foreignKey"]
        },
        {
          "entityField": "name",
          "dbColumn": "name",
          "dtoField": "name",
          "frontField": "name",
          "type": "string",
          "rules": ["required", "max:100"]
        },
        {
          "entityField": "startTime",
          "dbColumn": "start_time",
          "dtoField": "startTime",
          "frontField": "startTime",
          "type": "Date",
          "rules": ["required", "date"]
        },
        {
          "entityField": "endTime",
          "dbColumn": "end_time",
          "dtoField": "endTime",
          "frontField": "endTime",
          "type": "Date",
          "rules": ["optional", "date"]
        },
        {
          "entityField": "totalDurationMinutes",
          "dbColumn": "total_duration_minutes",
          "dtoField": "totalDurationMinutes",
          "frontField": "totalDurationMinutes",
          "type": "number",
          "rules": ["optional"]
        },
        {
          "entityField": "moodRating",
          "dbColumn": "mood_rating",
          "dtoField": "moodRating",
          "frontField": "moodRating",
          "type": "number",
          "rules": ["optional", "min:1", "max:5"]
        },
        {
          "entityField": "energyLevel",
          "dbColumn": "energy_level",
          "dtoField": "energyLevel",
          "frontField": "energyLevel",
          "type": "number",
          "rules": ["optional", "min:1", "max:5"]
        },
        {
          "entityField": "notes",
          "dbColumn": "notes",
          "dtoField": "notes",
          "frontField": "notes",
          "type": "string",
          "rules": ["optional"]
        },
        {
          "entityField": "status",
          "dbColumn": "status",
          "dtoField": "status",
          "frontField": "status",
          "type": "enum",
          "rules": [
            "required",
            "enum:in_progress,completed,paused,cancelled",
            "default:in_progress"
          ]
        },
        {
          "entityField": "createdAt",
          "dbColumn": "created_at",
          "dtoField": "createdAt",
          "frontField": "createdAt",
          "type": "Date",
          "rules": ["readonly", "autoGenerate"]
        },
        {
          "entityField": "updatedAt",
          "dbColumn": "updated_at",
          "dtoField": "updatedAt",
          "frontField": "updatedAt",
          "type": "Date",
          "rules": ["readonly", "autoGenerate"]
        }
      ]
    },
    {
      "entity": "ExerciseSet",
      "table": "exercise_sets",
      "dto": "ExerciseSetDTO",
      "frontType": "ExerciseSetType",
      "relations": {
        "workoutSession": {
          "type": "ManyToOne",
          "target": "WorkoutSession",
          "dto": "WorkoutSessionDTO",
          "frontType": "WorkoutSessionType"
        },
        "machine": {
          "type": "ManyToOne",
          "target": "Machine",
          "dto": "MachineDTO",
          "frontType": "MachineType"
        }
      },
      "fields": [
        {
          "entityField": "id",
          "dbColumn": "id",
          "dtoField": "id",
          "frontField": "id",
          "type": "number",
          "rules": ["primaryKey", "autoIncrement"]
        },
        {
          "entityField": "sessionId",
          "dbColumn": "session_id",
          "dtoField": "sessionId",
          "frontField": "sessionId",
          "type": "number",
          "rules": ["required", "foreignKey"]
        },
        {
          "entityField": "machineId",
          "dbColumn": "machine_id",
          "dtoField": "machineId",
          "frontField": "machineId",
          "type": "number",
          "rules": ["required", "foreignKey"]
        },
        {
          "entityField": "setNumber",
          "dbColumn": "set_number",
          "dtoField": "setNumber",
          "frontField": "setNumber",
          "type": "number",
          "rules": ["required"]
        },
        {
          "entityField": "repsCompleted",
          "dbColumn": "reps_completed",
          "dtoField": "repsCompleted",
          "frontField": "repsCompleted",
          "type": "number",
          "rules": ["required"]
        },
        {
          "entityField": "weightKg",
          "dbColumn": "weight_kg",
          "dtoField": "weightKg",
          "frontField": "weightKg",
          "type": "number",
          "rules": ["optional", "decimal:5,2"]
        },
        {
          "entityField": "durationSeconds",
          "dbColumn": "duration_seconds",
          "dtoField": "durationSeconds",
          "frontField": "durationSeconds",
          "type": "number",
          "rules": ["optional"]
        },
        {
          "entityField": "distanceMeters",
          "dbColumn": "distance_meters",
          "dtoField": "distanceMeters",
          "frontField": "distanceMeters",
          "type": "number",
          "rules": ["optional", "decimal:8,2"]
        },
        {
          "entityField": "rpeRating",
          "dbColumn": "rpe_rating",
          "dtoField": "rpeRating",
          "frontField": "rpeRating",
          "type": "number",
          "rules": ["optional", "min:1", "max:10"]
        },
        {
          "entityField": "notes",
          "dbColumn": "notes",
          "dtoField": "notes",
          "frontField": "notes",
          "type": "string",
          "rules": ["optional"]
        },
        {
          "entityField": "createdAt",
          "dbColumn": "created_at",
          "dtoField": "createdAt",
          "frontField": "createdAt",
          "type": "Date",
          "rules": ["readonly", "autoGenerate"]
        }
      ]
    },
    {
      "entity": "Gym",
      "table": "gyms",
      "dto": "GymDTO",
      "frontType": "GymType",
      "relations": {},
      "fields": [
        {
          "entityField": "id",
          "dbColumn": "id",
          "dtoField": "id",
          "frontField": "id",
          "type": "number",
          "rules": ["primaryKey", "autoIncrement"]
        },
        {
          "entityField": "name",
          "dbColumn": "name",
          "dtoField": "name",
          "frontField": "name",
          "type": "string",
          "rules": ["required", "max:255"]
        },
        {
          "entityField": "address",
          "dbColumn": "address",
          "dtoField": "address",
          "frontField": "address",
          "type": "string",
          "rules": ["required", "max:255"]
        },
        {
          "entityField": "phone",
          "dbColumn": "phone",
          "dtoField": "phone",
          "frontField": "phone",
          "type": "string",
          "rules": ["optional"]
        },
        {
          "entityField": "latitude",
          "dbColumn": "latitude",
          "dtoField": "latitude",
          "frontField": "latitude",
          "type": "number",
          "rules": ["optional", "decimal:10,7"]
        },
        {
          "entityField": "longitude",
          "dbColumn": "longitude",
          "dtoField": "longitude",
          "frontField": "longitude",
          "type": "number",
          "rules": ["optional", "decimal:10,7"]
        },
        {
          "entityField": "facilities",
          "dbColumn": "facilities",
          "dtoField": "facilities",
          "frontField": "facilities",
          "type": "string",
          "rules": ["optional"]
        },
        {
          "entityField": "openHour",
          "dbColumn": "open_hour",
          "dtoField": "openHour",
          "frontField": "openHour",
          "type": "string",
          "rules": ["optional"]
        },
        {
          "entityField": "is24Hours",
          "dbColumn": "is_24_hours",
          "dtoField": "is24Hours",
          "frontField": "is24Hours",
          "type": "boolean",
          "rules": ["required", "default:false"]
        },
        {
          "entityField": "hasGX",
          "dbColumn": "has_gx",
          "dtoField": "hasGX",
          "frontField": "hasGX",
          "type": "boolean",
          "rules": ["required", "default:false"]
        },
        {
          "entityField": "hasPT",
          "dbColumn": "has_pt",
          "dtoField": "hasPT",
          "frontField": "hasPT",
          "type": "boolean",
          "rules": ["required", "default:false"]
        },
        {
          "entityField": "hasGroupPT",
          "dbColumn": "has_group_pt",
          "dtoField": "hasGroupPT",
          "frontField": "hasGroupPT",
          "type": "boolean",
          "rules": ["required", "default:false"]
        },
        {
          "entityField": "hasParking",
          "dbColumn": "has_parking",
          "dtoField": "hasParking",
          "frontField": "hasParking",
          "type": "boolean",
          "rules": ["required", "default:false"]
        },
        {
          "entityField": "hasShower",
          "dbColumn": "has_shower",
          "dtoField": "hasShower",
          "frontField": "hasShower",
          "type": "boolean",
          "rules": ["required", "default:false"]
        },
        {
          "entityField": "createdAt",
          "dbColumn": "created_at",
          "dtoField": "createdAt",
          "frontField": "createdAt",
          "type": "Date",
          "rules": ["readonly", "autoGenerate"]
        },
        {
          "entityField": "updatedAt",
          "dbColumn": "updated_at",
          "dtoField": "updatedAt",
          "frontField": "updatedAt",
          "type": "Date",
          "rules": ["readonly", "autoGenerate"]
        }
      ]
    },
    {
      "entity": "Post",
      "table": "posts",
      "dto": "PostDTO",
      "frontType": "PostType",
      "relations": {
        "user": {
          "type": "ManyToOne",
          "target": "User",
          "dto": "UserDTO",
          "frontType": "UserType"
        },
        "likes": {
          "type": "OneToMany",
          "target": "Like",
          "dto": "LikeDTO",
          "frontType": "LikeType"
        },
        "comments": {
          "type": "OneToMany",
          "target": "Comment",
          "dto": "CommentDTO",
          "frontType": "CommentType"
        }
      },
      "fields": [
        {
          "entityField": "id",
          "dbColumn": "id",
          "dtoField": "id",
          "frontField": "id",
          "type": "number",
          "rules": ["primaryKey", "autoIncrement"]
        },
        {
          "entityField": "title",
          "dbColumn": "title",
          "dtoField": "title",
          "frontField": "title",
          "type": "string",
          "rules": ["required", "max:255"]
        },
        {
          "entityField": "content",
          "dbColumn": "content",
          "dtoField": "content",
          "frontField": "content",
          "type": "string",
          "rules": ["required"]
        },
        {
          "entityField": "author",
          "dbColumn": "author",
          "dtoField": "author",
          "frontField": "author",
          "type": "string",
          "rules": ["required", "max:100"]
        },
        {
          "entityField": "userId",
          "dbColumn": "user_id",
          "dtoField": "userId",
          "frontField": "userId",
          "type": "number",
          "rules": ["required", "foreignKey"]
        },
        {
          "entityField": "category",
          "dbColumn": "category",
          "dtoField": "category",
          "frontField": "category",
          "type": "enum",
          "rules": [
            "required",
            "enum:운동루틴,팁,다이어트,기구가이드,기타",
            "default:기타"
          ]
        },
        {
          "entityField": "tags",
          "dbColumn": "tags",
          "dtoField": "tags",
          "frontField": "tags",
          "type": "string[]",
          "rules": ["optional", "json"]
        },
        {
          "entityField": "thumbnailUrl",
          "dbColumn": "thumbnail_url",
          "dtoField": "thumbnailUrl",
          "frontField": "thumbnailUrl",
          "type": "string",
          "rules": ["optional", "isUrl", "max:255"]
        },
        {
          "entityField": "images",
          "dbColumn": "images",
          "dtoField": "images",
          "frontField": "images",
          "type": "string[]",
          "rules": ["optional", "json"]
        },
        {
          "entityField": "likeCount",
          "dbColumn": "like_count",
          "dtoField": "likeCount",
          "frontField": "likeCount",
          "type": "number",
          "rules": ["required", "default:0", "readonly"]
        },
        {
          "entityField": "commentCount",
          "dbColumn": "comment_count",
          "dtoField": "commentCount",
          "frontField": "commentCount",
          "type": "number",
          "rules": ["required", "default:0", "readonly"]
        },
        {
          "entityField": "createdAt",
          "dbColumn": "created_at",
          "dtoField": "createdAt",
          "frontField": "createdAt",
          "type": "Date",
          "rules": ["readonly", "autoGenerate"]
        },
        {
          "entityField": "updatedAt",
          "dbColumn": "updated_at",
          "dtoField": "updatedAt",
          "frontField": "updatedAt",
          "type": "Date",
          "rules": ["readonly", "autoGenerate"]
        }
      ]
    },
    {
      "entity": "Comment",
      "table": "comments",
      "dto": "CommentDTO",
      "frontType": "CommentType",
      "relations": {
        "user": {
          "type": "ManyToOne",
          "target": "User",
          "dto": "UserDTO",
          "frontType": "UserType"
        },
        "post": {
          "type": "ManyToOne",
          "target": "Post",
          "dto": "PostDTO",
          "frontType": "PostType"
        }
      },
      "fields": [
        {
          "entityField": "id",
          "dbColumn": "id",
          "dtoField": "id",
          "frontField": "id",
          "type": "number",
          "rules": ["primaryKey", "autoIncrement"]
        },
        {
          "entityField": "postId",
          "dbColumn": "post_id",
          "dtoField": "postId",
          "frontField": "postId",
          "type": "number",
          "rules": ["required", "foreignKey"]
        },
        {
          "entityField": "userId",
          "dbColumn": "user_id",
          "dtoField": "userId",
          "frontField": "userId",
          "type": "number",
          "rules": ["required", "foreignKey"]
        },
        {
          "entityField": "author",
          "dbColumn": "author",
          "dtoField": "author",
          "frontField": "author",
          "type": "string",
          "rules": ["required", "max:100"]
        },
        {
          "entityField": "content",
          "dbColumn": "content",
          "dtoField": "content",
          "frontField": "content",
          "type": "string",
          "rules": ["required"]
        },
        {
          "entityField": "createdAt",
          "dbColumn": "created_at",
          "dtoField": "createdAt",
          "frontField": "createdAt",
          "type": "Date",
          "rules": ["readonly", "autoGenerate"]
        },
        {
          "entityField": "updatedAt",
          "dbColumn": "updated_at",
          "dtoField": "updatedAt",
          "frontField": "updatedAt",
          "type": "Date",
          "rules": ["readonly", "autoGenerate"]
        }
      ]
    },
    {
      "entity": "UserLevel",
      "table": "user_levels",
      "dto": "UserLevelDTO",
      "frontType": "UserLevelType",
      "relations": {
        "user": {
          "type": "ManyToOne",
          "target": "User",
          "dto": "UserDTO",
          "frontType": "UserType"
        }
      },
      "fields": [
        {
          "entityField": "id",
          "dbColumn": "id",
          "dtoField": "id",
          "frontField": "id",
          "type": "number",
          "rules": ["primaryKey", "autoIncrement"]
        },
        {
          "entityField": "userId",
          "dbColumn": "user_id",
          "dtoField": "userId",
          "frontField": "userId",
          "type": "number",
          "rules": ["required", "foreignKey"]
        },
        {
          "entityField": "level",
          "dbColumn": "level",
          "dtoField": "level",
          "frontField": "level",
          "type": "number",
          "rules": ["required", "default:1"]
        },
        {
          "entityField": "currentExp",
          "dbColumn": "current_exp",
          "dtoField": "currentExp",
          "frontField": "currentExp",
          "type": "number",
          "rules": ["required", "default:0"]
        },
        {
          "entityField": "totalExp",
          "dbColumn": "total_exp",
          "dtoField": "totalExp",
          "frontField": "totalExp",
          "type": "number",
          "rules": ["required", "default:0"]
        },
        {
          "entityField": "seasonExp",
          "dbColumn": "season_exp",
          "dtoField": "seasonExp",
          "frontField": "seasonExp",
          "type": "number",
          "rules": ["required", "default:0"]
        },
        {
          "entityField": "totalLevelUps",
          "dbColumn": "total_level_ups",
          "dtoField": "totalLevelUps",
          "frontField": "totalLevelUps",
          "type": "number",
          "rules": ["required", "default:0"]
        },
        {
          "entityField": "lastLevelUpAt",
          "dbColumn": "last_level_up_at",
          "dtoField": "lastLevelUpAt",
          "frontField": "lastLevelUpAt",
          "type": "Date",
          "rules": ["optional", "readonly"]
        },
        {
          "entityField": "currentSeason",
          "dbColumn": "current_season",
          "dtoField": "currentSeason",
          "frontField": "currentSeason",
          "type": "number",
          "rules": ["required", "default:1"]
        },
        {
          "entityField": "seasonStartDate",
          "dbColumn": "season_start_date",
          "dtoField": "seasonStartDate",
          "frontField": "seasonStartDate",
          "type": "Date",
          "rules": ["optional"]
        },
        {
          "entityField": "seasonEndDate",
          "dbColumn": "season_end_date",
          "dtoField": "seasonEndDate",
          "frontField": "seasonEndDate",
          "type": "Date",
          "rules": ["optional"]
        },
        {
          "entityField": "createdAt",
          "dbColumn": "created_at",
          "dtoField": "createdAt",
          "frontField": "createdAt",
          "type": "Date",
          "rules": ["readonly", "autoGenerate"]
        },
        {
          "entityField": "updatedAt",
          "dbColumn": "updated_at",
          "dtoField": "updatedAt",
          "frontField": "updatedAt",
          "type": "Date",
          "rules": ["readonly", "autoGenerate"]
        }
      ]
    },
    {
      "entity": "Like",
      "table": "post_likes",
      "dto": "LikeDTO",
      "frontType": "LikeType",
      "relations": {
        "post": {
          "type": "ManyToOne",
          "target": "Post",
          "dto": "PostDTO",
          "frontType": "PostType"
        },
        "user": {
          "type": "ManyToOne",
          "target": "User",
          "dto": "UserDTO",
          "frontType": "UserType"
        }
      },
      "fields": [
        {
          "entityField": "id",
          "dbColumn": "id",
          "dtoField": "id",
          "frontField": "id",
          "type": "number",
          "rules": ["primaryKey", "autoIncrement"]
        },
        {
          "entityField": "postId",
          "dbColumn": "post_id",
          "dtoField": "postId",
          "frontField": "postId",
          "type": "number",
          "rules": ["required", "foreignKey"]
        },
        {
          "entityField": "userId",
          "dbColumn": "user_id",
          "dtoField": "userId",
          "frontField": "userId",
          "type": "number",
          "rules": ["required", "foreignKey"]
        },
        {
          "entityField": "createdAt",
          "dbColumn": "created_at",
          "dtoField": "createdAt",
          "frontField": "createdAt",
          "type": "Date",
          "rules": ["readonly", "autoGenerate"]
        }
      ]
    },
    {
      "entity": "ExpHistory",
      "table": "exp_history",
      "dto": "ExpHistoryDTO",
      "frontType": "ExpHistoryType",
      "relations": {
        "user": {
          "type": "ManyToOne",
          "target": "User",
          "dto": "UserDTO",
          "frontType": "UserType"
        }
      },
      "fields": [
        {
          "entityField": "id",
          "dbColumn": "id",
          "dtoField": "id",
          "frontField": "id",
          "type": "number",
          "rules": ["primaryKey", "autoIncrement"]
        },
        {
          "entityField": "userId",
          "dbColumn": "user_id",
          "dtoField": "userId",
          "frontField": "userId",
          "type": "number",
          "rules": ["required", "foreignKey"]
        },
        {
          "entityField": "actionType",
          "dbColumn": "action_type",
          "dtoField": "actionType",
          "frontField": "actionType",
          "type": "enum",
          "rules": [
            "required",
            "enum:workout_complete,workout_streak,goal_achieved,post_created,comment_created,like_received,daily_login,weekly_challenge,monthly_milestone"
          ]
        },
        {
          "entityField": "expGained",
          "dbColumn": "exp_gained",
          "dtoField": "expGained",
          "frontField": "expGained",
          "type": "number",
          "rules": ["required"]
        },
        {
          "entityField": "source",
          "dbColumn": "source",
          "dtoField": "source",
          "frontField": "source",
          "type": "string",
          "rules": ["required", "max:100"]
        },
        {
          "entityField": "metadata",
          "dbColumn": "metadata",
          "dtoField": "metadata",
          "frontField": "metadata",
          "type": "object",
          "rules": ["optional", "json"]
        },
        {
          "entityField": "levelBefore",
          "dbColumn": "level_before",
          "dtoField": "levelBefore",
          "frontField": "levelBefore",
          "type": "number",
          "rules": ["optional"]
        },
        {
          "entityField": "levelAfter",
          "dbColumn": "level_after",
          "dtoField": "levelAfter",
          "frontField": "levelAfter",
          "type": "number",
          "rules": ["optional"]
        },
        {
          "entityField": "isLevelUp",
          "dbColumn": "is_level_up",
          "dtoField": "isLevelUp",
          "frontField": "isLevelUp",
          "type": "boolean",
          "rules": ["required", "default:false"]
        },
        {
          "entityField": "createdAt",
          "dbColumn": "created_at",
          "dtoField": "createdAt",
          "frontField": "createdAt",
          "type": "Date",
          "rules": ["readonly", "autoGenerate"]
        }
      ]
    }
  ],
  "rules": {
    "naming": {
      "entity": "PascalCase",
      "dto": "PascalCase",
      "front": "PascalCase",
      "dbColumn": "snake_case"
    },
    "serialization": {
      "password": "exclude",
      "loginAttempts": "exclude",
      "lockedUntil": "exclude",
      "date": "ISO8601",
      "json": "stringify"
    },
    "validation": {
      "email": "isEmail",
      "nickname": "min:2|max:20",
      "title": "max:255",
      "author": "max:100",
      "url": "isUrl",
      "enum": "inArray"
    },
    "security": {
      "password": "bcrypt",
      "private": "excludeFromResponse",
      "sensitive": ["password", "loginAttempts", "lockedUntil"]
    },
    "relationships": {
      "cascade": [
        "User.userLevel",
        "User.expHistory",
        "User.userRewards",
        "User.milestones",
        "User.userStreaks",
        "User.comments",
        "User.workoutSessions",
        "User.workoutPlans",
        "User.workoutGoals",
        "User.workoutStats",
        "User.workoutProgress",
        "User.workoutReminders",
        "User.posts",
        "User.likes"
      ],
      "lazy": ["Post.comments", "Post.likes", "User.posts"],
      "eager": ["Comment.user", "Post.author"]
    }
  }
}
