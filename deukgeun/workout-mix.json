{
  "mapping": [
    {
      "entity": "WorkoutSession",
      "table": "workout_sessions",
      "dto": "WorkoutSessionDTO",
      "frontType": "WorkoutSessionType",
      "relations": {
        "user": {
          "type": "ManyToOne",
          "target": "User",
          "dto": "UserDTO",
          "frontType": "UserType"
        },
        "workoutPlan": {
          "type": "ManyToOne",
          "target": "WorkoutPlan",
          "dto": "WorkoutPlanDTO",
          "frontType": "WorkoutPlanType"
        },
        "gym": {
          "type": "ManyToOne",
          "target": "Gym",
          "dto": "GymDTO",
          "frontType": "GymType"
        },
        "exerciseSets": {
          "type": "OneToMany",
          "target": "ExerciseSet",
          "dto": "ExerciseSetDTO",
          "frontType": "ExerciseSetType"
        }
      },
      "fields": [
        {
          "entityField": "id",
          "dbColumn": "id",
          "dtoField": "id",
          "frontField": "id",
          "type": "number",
          "rules": ["primaryKey", "autoIncrement"]
        },
        {
          "entityField": "userId",
          "dbColumn": "user_id",
          "dtoField": "userId",
          "frontField": "userId",
          "type": "number",
          "rules": ["required", "foreignKey"]
        },
        {
          "entityField": "planId",
          "dbColumn": "plan_id",
          "dtoField": "planId",
          "frontField": "planId",
          "type": "number",
          "rules": ["optional", "foreignKey"]
        },
        {
          "entityField": "gymId",
          "dbColumn": "gym_id",
          "dtoField": "gymId",
          "frontField": "gymId",
          "type": "number",
          "rules": ["optional", "foreignKey"]
        },
        {
          "entityField": "name",
          "dbColumn": "name",
          "dtoField": "name",
          "frontField": "name",
          "type": "string",
          "rules": ["required", "max:100"]
        },
        {
          "entityField": "startTime",
          "dbColumn": "start_time",
          "dtoField": "startTime",
          "frontField": "startTime",
          "type": "Date",
          "rules": ["required", "date"]
        },
        {
          "entityField": "endTime",
          "dbColumn": "end_time",
          "dtoField": "endTime",
          "frontField": "endTime",
          "type": "Date",
          "rules": ["optional", "date"]
        },
        {
          "entityField": "totalDurationMinutes",
          "dbColumn": "total_duration_minutes",
          "dtoField": "totalDurationMinutes",
          "frontField": "totalDurationMinutes",
          "type": "number",
          "rules": ["optional"]
        },
        {
          "entityField": "moodRating",
          "dbColumn": "mood_rating",
          "dtoField": "moodRating",
          "frontField": "moodRating",
          "type": "number",
          "rules": ["optional", "min:1", "max:5"]
        },
        {
          "entityField": "energyLevel",
          "dbColumn": "energy_level",
          "dtoField": "energyLevel",
          "frontField": "energyLevel",
          "type": "number",
          "rules": ["optional", "min:1", "max:5"]
        },
        {
          "entityField": "notes",
          "dbColumn": "notes",
          "dtoField": "notes",
          "frontField": "notes",
          "type": "string",
          "rules": ["optional"]
        },
        {
          "entityField": "status",
          "dbColumn": "status",
          "dtoField": "status",
          "frontField": "status",
          "type": "enum",
          "rules": [
            "required",
            "enum:in_progress,completed,paused,cancelled",
            "default:in_progress"
          ]
        },
        {
          "entityField": "createdAt",
          "dbColumn": "created_at",
          "dtoField": "createdAt",
          "frontField": "createdAt",
          "type": "Date",
          "rules": ["readonly", "autoGenerate"]
        },
        {
          "entityField": "updatedAt",
          "dbColumn": "updated_at",
          "dtoField": "updatedAt",
          "frontField": "updatedAt",
          "type": "Date",
          "rules": ["readonly", "autoGenerate"]
        }
      ]
    },
    {
      "entity": "ExerciseSet",
      "table": "exercise_sets",
      "dto": "ExerciseSetDTO",
      "frontType": "ExerciseSetType",
      "relations": {
        "workoutSession": {
          "type": "ManyToOne",
          "target": "WorkoutSession",
          "dto": "WorkoutSessionDTO",
          "frontType": "WorkoutSessionType"
        },
        "machine": {
          "type": "ManyToOne",
          "target": "Machine",
          "dto": "MachineDTO",
          "frontType": "MachineType"
        }
      },
      "fields": [
        {
          "entityField": "id",
          "dbColumn": "id",
          "dtoField": "id",
          "frontField": "id",
          "type": "number",
          "rules": ["primaryKey", "autoIncrement"]
        },
        {
          "entityField": "sessionId",
          "dbColumn": "session_id",
          "dtoField": "sessionId",
          "frontField": "sessionId",
          "type": "number",
          "rules": ["required", "foreignKey"]
        },
        {
          "entityField": "machineId",
          "dbColumn": "machine_id",
          "dtoField": "machineId",
          "frontField": "machineId",
          "type": "number",
          "rules": ["required", "foreignKey"]
        },
        {
          "entityField": "setNumber",
          "dbColumn": "set_number",
          "dtoField": "setNumber",
          "frontField": "setNumber",
          "type": "number",
          "rules": ["required"]
        },
        {
          "entityField": "repsCompleted",
          "dbColumn": "reps_completed",
          "dtoField": "repsCompleted",
          "frontField": "repsCompleted",
          "type": "number",
          "rules": ["required"]
        },
        {
          "entityField": "weightKg",
          "dbColumn": "weight_kg",
          "dtoField": "weightKg",
          "frontField": "weightKg",
          "type": "number",
          "rules": ["optional", "decimal:5,2"]
        },
        {
          "entityField": "durationSeconds",
          "dbColumn": "duration_seconds",
          "dtoField": "durationSeconds",
          "frontField": "durationSeconds",
          "type": "number",
          "rules": ["optional"]
        },
        {
          "entityField": "distanceMeters",
          "dbColumn": "distance_meters",
          "dtoField": "distanceMeters",
          "frontField": "distanceMeters",
          "type": "number",
          "rules": ["optional", "decimal:8,2"]
        },
        {
          "entityField": "rpeRating",
          "dbColumn": "rpe_rating",
          "dtoField": "rpeRating",
          "frontField": "rpeRating",
          "type": "number",
          "rules": ["optional", "min:1", "max:10"]
        },
        {
          "entityField": "notes",
          "dbColumn": "notes",
          "dtoField": "notes",
          "frontField": "notes",
          "type": "string",
          "rules": ["optional"]
        },
        {
          "entityField": "createdAt",
          "dbColumn": "created_at",
          "dtoField": "createdAt",
          "frontField": "createdAt",
          "type": "Date",
          "rules": ["readonly", "autoGenerate"]
        }
      ]
    },
    {
      "entity": "WorkoutPlan",
      "table": "workout_plans",
      "dto": "WorkoutPlanDTO",
      "frontType": "WorkoutPlanType",
      "relations": {
        "user": {
          "type": "ManyToOne",
          "target": "User",
          "dto": "UserDTO",
          "frontType": "UserType"
        },
        "workoutSessions": {
          "type": "OneToMany",
          "target": "WorkoutSession",
          "dto": "WorkoutSessionDTO",
          "frontType": "WorkoutSessionType"
        },
        "workoutGoals": {
          "type": "OneToMany",
          "target": "WorkoutGoal",
          "dto": "WorkoutGoalDTO",
          "frontType": "WorkoutGoalType"
        }
      },
      "fields": [
        {
          "entityField": "id",
          "dbColumn": "id",
          "dtoField": "id",
          "frontField": "id",
          "type": "number",
          "rules": ["primaryKey", "autoIncrement"]
        },
        {
          "entityField": "userId",
          "dbColumn": "user_id",
          "dtoField": "userId",
          "frontField": "userId",
          "type": "number",
          "rules": ["required", "foreignKey"]
        },
        {
          "entityField": "name",
          "dbColumn": "name",
          "dtoField": "name",
          "frontField": "name",
          "type": "string",
          "rules": ["required", "max:100"]
        },
        {
          "entityField": "description",
          "dbColumn": "description",
          "dtoField": "description",
          "frontField": "description",
          "type": "string",
          "rules": ["optional"]
        },
        {
          "entityField": "type",
          "dbColumn": "type",
          "dtoField": "type",
          "frontField": "type",
          "type": "enum",
          "rules": [
            "required",
            "enum:strength,cardio,flexibility,hiit,functional,rehabilitation",
            "default:strength"
          ]
        },
        {
          "entityField": "difficulty",
          "dbColumn": "difficulty",
          "dtoField": "difficulty",
          "frontField": "difficulty",
          "type": "enum",
          "rules": [
            "required",
            "enum:beginner,intermediate,advanced,expert",
            "default:beginner"
          ]
        },
        {
          "entityField": "estimatedDuration",
          "dbColumn": "estimated_duration",
          "dtoField": "estimatedDuration",
          "frontField": "estimatedDuration",
          "type": "number",
          "rules": ["optional"]
        },
        {
          "entityField": "isActive",
          "dbColumn": "is_active",
          "dtoField": "isActive",
          "frontField": "isActive",
          "type": "boolean",
          "rules": ["required", "default:true"]
        },
        {
          "entityField": "createdAt",
          "dbColumn": "created_at",
          "dtoField": "createdAt",
          "frontField": "createdAt",
          "type": "Date",
          "rules": ["readonly", "autoGenerate"]
        },
        {
          "entityField": "updatedAt",
          "dbColumn": "updated_at",
          "dtoField": "updatedAt",
          "frontField": "updatedAt",
          "type": "Date",
          "rules": ["readonly", "autoGenerate"]
        }
      ]
    },
    {
      "entity": "WorkoutGoal",
      "table": "workout_goals",
      "dto": "WorkoutGoalDTO",
      "frontType": "WorkoutGoalType",
      "relations": {
        "user": {
          "type": "ManyToOne",
          "target": "User",
          "dto": "UserDTO",
          "frontType": "UserType"
        },
        "workoutPlan": {
          "type": "ManyToOne",
          "target": "WorkoutPlan",
          "dto": "WorkoutPlanDTO",
          "frontType": "WorkoutPlanType"
        }
      },
      "fields": [
        {
          "entityField": "id",
          "dbColumn": "id",
          "dtoField": "id",
          "frontField": "id",
          "type": "number",
          "rules": ["primaryKey", "autoIncrement"]
        },
        {
          "entityField": "userId",
          "dbColumn": "user_id",
          "dtoField": "userId",
          "frontField": "userId",
          "type": "number",
          "rules": ["required", "foreignKey"]
        },
        {
          "entityField": "planId",
          "dbColumn": "plan_id",
          "dtoField": "planId",
          "frontField": "planId",
          "type": "number",
          "rules": ["optional", "foreignKey"]
        },
        {
          "entityField": "title",
          "dbColumn": "title",
          "dtoField": "title",
          "frontField": "title",
          "type": "string",
          "rules": ["required", "max:100"]
        },
        {
          "entityField": "description",
          "dbColumn": "description",
          "dtoField": "description",
          "frontField": "description",
          "type": "string",
          "rules": ["optional"]
        },
        {
          "entityField": "type",
          "dbColumn": "type",
          "dtoField": "type",
          "frontField": "type",
          "type": "enum",
          "rules": [
            "required",
            "enum:weight_loss,muscle_gain,endurance,strength,flexibility,general_fitness",
            "default:general_fitness"
          ]
        },
        {
          "entityField": "targetValue",
          "dbColumn": "target_value",
          "dtoField": "targetValue",
          "frontField": "targetValue",
          "type": "number",
          "rules": ["optional"]
        },
        {
          "entityField": "currentValue",
          "dbColumn": "current_value",
          "dtoField": "currentValue",
          "frontField": "currentValue",
          "type": "number",
          "rules": ["required", "default:0"]
        },
        {
          "entityField": "unit",
          "dbColumn": "unit",
          "dtoField": "unit",
          "frontField": "unit",
          "type": "string",
          "rules": ["optional", "max:20"]
        },
        {
          "entityField": "targetDate",
          "dbColumn": "target_date",
          "dtoField": "targetDate",
          "frontField": "targetDate",
          "type": "Date",
          "rules": ["optional", "date"]
        },
        {
          "entityField": "isCompleted",
          "dbColumn": "is_completed",
          "dtoField": "isCompleted",
          "frontField": "isCompleted",
          "type": "boolean",
          "rules": ["required", "default:false"]
        },
        {
          "entityField": "completedAt",
          "dbColumn": "completed_at",
          "dtoField": "completedAt",
          "frontField": "completedAt",
          "type": "Date",
          "rules": ["optional", "date"]
        },
        {
          "entityField": "createdAt",
          "dbColumn": "created_at",
          "dtoField": "createdAt",
          "frontField": "createdAt",
          "type": "Date",
          "rules": ["readonly", "autoGenerate"]
        },
        {
          "entityField": "updatedAt",
          "dbColumn": "updated_at",
          "dtoField": "updatedAt",
          "frontField": "updatedAt",
          "type": "Date",
          "rules": ["readonly", "autoGenerate"]
        }
      ]
    },
    {
      "entity": "WorkoutStats",
      "table": "workout_stats",
      "dto": "WorkoutStatsDTO",
      "frontType": "WorkoutStatsType",
      "relations": {
        "user": {
          "type": "ManyToOne",
          "target": "User",
          "dto": "UserDTO",
          "frontType": "UserType"
        }
      },
      "fields": [
        {
          "entityField": "id",
          "dbColumn": "id",
          "dtoField": "id",
          "frontField": "id",
          "type": "number",
          "rules": ["primaryKey", "autoIncrement"]
        },
        {
          "entityField": "userId",
          "dbColumn": "user_id",
          "dtoField": "userId",
          "frontField": "userId",
          "type": "number",
          "rules": ["required", "foreignKey"]
        },
        {
          "entityField": "totalWorkouts",
          "dbColumn": "total_workouts",
          "dtoField": "totalWorkouts",
          "frontField": "totalWorkouts",
          "type": "number",
          "rules": ["required", "default:0"]
        },
        {
          "entityField": "totalDuration",
          "dbColumn": "total_duration",
          "dtoField": "totalDuration",
          "frontField": "totalDuration",
          "type": "number",
          "rules": ["required", "default:0"]
        },
        {
          "entityField": "totalCalories",
          "dbColumn": "total_calories",
          "dtoField": "totalCalories",
          "frontField": "totalCalories",
          "type": "number",
          "rules": ["required", "default:0"]
        },
        {
          "entityField": "currentStreak",
          "dbColumn": "current_streak",
          "dtoField": "currentStreak",
          "frontField": "currentStreak",
          "type": "number",
          "rules": ["required", "default:0"]
        },
        {
          "entityField": "longestStreak",
          "dbColumn": "longest_streak",
          "dtoField": "longestStreak",
          "frontField": "longestStreak",
          "type": "number",
          "rules": ["required", "default:0"]
        },
        {
          "entityField": "lastWorkoutDate",
          "dbColumn": "last_workout_date",
          "dtoField": "lastWorkoutDate",
          "frontField": "lastWorkoutDate",
          "type": "Date",
          "rules": ["optional", "date"]
        },
        {
          "entityField": "createdAt",
          "dbColumn": "created_at",
          "dtoField": "createdAt",
          "frontField": "createdAt",
          "type": "Date",
          "rules": ["readonly", "autoGenerate"]
        },
        {
          "entityField": "updatedAt",
          "dbColumn": "updated_at",
          "dtoField": "updatedAt",
          "frontField": "updatedAt",
          "type": "Date",
          "rules": ["readonly", "autoGenerate"]
        }
      ]
    },
    {
      "entity": "WorkoutProgress",
      "table": "workout_progress",
      "dto": "WorkoutProgressDTO",
      "frontType": "WorkoutProgressType",
      "relations": {
        "user": {
          "type": "ManyToOne",
          "target": "User",
          "dto": "UserDTO",
          "frontType": "UserType"
        }
      },
      "fields": [
        {
          "entityField": "id",
          "dbColumn": "id",
          "dtoField": "id",
          "frontField": "id",
          "type": "number",
          "rules": ["primaryKey", "autoIncrement"]
        },
        {
          "entityField": "userId",
          "dbColumn": "user_id",
          "dtoField": "userId",
          "frontField": "userId",
          "type": "number",
          "rules": ["required", "foreignKey"]
        },
        {
          "entityField": "date",
          "dbColumn": "date",
          "dtoField": "date",
          "frontField": "date",
          "type": "Date",
          "rules": ["required", "date"]
        },
        {
          "entityField": "weight",
          "dbColumn": "weight",
          "dtoField": "weight",
          "frontField": "weight",
          "type": "number",
          "rules": ["optional", "decimal:5,2"]
        },
        {
          "entityField": "bodyFat",
          "dbColumn": "body_fat",
          "dtoField": "bodyFat",
          "frontField": "bodyFat",
          "type": "number",
          "rules": ["optional", "decimal:4,2"]
        },
        {
          "entityField": "muscleMass",
          "dbColumn": "muscle_mass",
          "dtoField": "muscleMass",
          "frontField": "muscleMass",
          "type": "number",
          "rules": ["optional", "decimal:5,2"]
        },
        {
          "entityField": "notes",
          "dbColumn": "notes",
          "dtoField": "notes",
          "frontField": "notes",
          "type": "string",
          "rules": ["optional"]
        },
        {
          "entityField": "createdAt",
          "dbColumn": "created_at",
          "dtoField": "createdAt",
          "frontField": "createdAt",
          "type": "Date",
          "rules": ["readonly", "autoGenerate"]
        },
        {
          "entityField": "updatedAt",
          "dbColumn": "updated_at",
          "dtoField": "updatedAt",
          "frontField": "updatedAt",
          "type": "Date",
          "rules": ["readonly", "autoGenerate"]
        }
      ]
    },
    {
      "entity": "WorkoutReminder",
      "table": "workout_reminders",
      "dto": "WorkoutReminderDTO",
      "frontType": "WorkoutReminderType",
      "relations": {
        "user": {
          "type": "ManyToOne",
          "target": "User",
          "dto": "UserDTO",
          "frontType": "UserType"
        }
      },
      "fields": [
        {
          "entityField": "id",
          "dbColumn": "id",
          "dtoField": "id",
          "frontField": "id",
          "type": "number",
          "rules": ["primaryKey", "autoIncrement"]
        },
        {
          "entityField": "userId",
          "dbColumn": "user_id",
          "dtoField": "userId",
          "frontField": "userId",
          "type": "number",
          "rules": ["required", "foreignKey"]
        },
        {
          "entityField": "title",
          "dbColumn": "title",
          "dtoField": "title",
          "frontField": "title",
          "type": "string",
          "rules": ["required", "max:100"]
        },
        {
          "entityField": "message",
          "dbColumn": "message",
          "dtoField": "message",
          "frontField": "message",
          "type": "string",
          "rules": ["optional"]
        },
        {
          "entityField": "reminderTime",
          "dbColumn": "reminder_time",
          "dtoField": "reminderTime",
          "frontField": "reminderTime",
          "type": "string",
          "rules": ["required"]
        },
        {
          "entityField": "daysOfWeek",
          "dbColumn": "days_of_week",
          "dtoField": "daysOfWeek",
          "frontField": "daysOfWeek",
          "type": "string[]",
          "rules": ["optional", "json"]
        },
        {
          "entityField": "isActive",
          "dbColumn": "is_active",
          "dtoField": "isActive",
          "frontField": "isActive",
          "type": "boolean",
          "rules": ["required", "default:true"]
        },
        {
          "entityField": "lastTriggered",
          "dbColumn": "last_triggered",
          "dtoField": "lastTriggered",
          "frontField": "lastTriggered",
          "type": "Date",
          "rules": ["optional", "date"]
        },
        {
          "entityField": "createdAt",
          "dbColumn": "created_at",
          "dtoField": "createdAt",
          "frontField": "createdAt",
          "type": "Date",
          "rules": ["readonly", "autoGenerate"]
        },
        {
          "entityField": "updatedAt",
          "dbColumn": "updated_at",
          "dtoField": "updatedAt",
          "frontField": "updatedAt",
          "type": "Date",
          "rules": ["readonly", "autoGenerate"]
        }
      ]
    },
    {
      "entity": "Machine",
      "table": "machines",
      "dto": "MachineDTO",
      "frontType": "MachineType",
      "relations": {},
      "fields": [
        {
          "entityField": "id",
          "dbColumn": "id",
          "dtoField": "id",
          "frontField": "id",
          "type": "number",
          "rules": ["primaryKey", "autoIncrement"]
        },
        {
          "entityField": "machineKey",
          "dbColumn": "machine_key",
          "dtoField": "machineKey",
          "frontField": "machineKey",
          "type": "string",
          "rules": ["unique", "required", "max:100"]
        },
        {
          "entityField": "name",
          "dbColumn": "name",
          "dtoField": "name",
          "frontField": "name",
          "type": "string",
          "rules": ["required", "max:100"]
        },
        {
          "entityField": "nameKo",
          "dbColumn": "name_ko",
          "dtoField": "nameKo",
          "frontField": "nameKo",
          "type": "string",
          "rules": ["optional", "max:100"]
        },
        {
          "entityField": "nameEn",
          "dbColumn": "name_en",
          "dtoField": "nameEn",
          "frontField": "nameEn",
          "type": "string",
          "rules": ["optional", "max:100"]
        },
        {
          "entityField": "imageUrl",
          "dbColumn": "image_url",
          "dtoField": "imageUrl",
          "frontField": "imageUrl",
          "type": "string",
          "rules": ["required", "isUrl", "max:255"]
        },
        {
          "entityField": "shortDesc",
          "dbColumn": "short_desc",
          "dtoField": "shortDesc",
          "frontField": "shortDesc",
          "type": "string",
          "rules": ["required", "max:255"]
        },
        {
          "entityField": "detailDesc",
          "dbColumn": "detail_desc",
          "dtoField": "detailDesc",
          "frontField": "detailDesc",
          "type": "string",
          "rules": ["required"]
        },
        {
          "entityField": "positiveEffect",
          "dbColumn": "positive_effect",
          "dtoField": "positiveEffect",
          "frontField": "positiveEffect",
          "type": "string",
          "rules": ["optional"]
        },
        {
          "entityField": "category",
          "dbColumn": "category",
          "dtoField": "category",
          "frontField": "category",
          "type": "enum",
          "rules": [
            "required",
            "enum:cardio,strength,flexibility,balance,functional,rehabilitation,상체,하체,전신,기타",
            "default:strength"
          ]
        },
        {
          "entityField": "targetMuscles",
          "dbColumn": "target_muscles",
          "dtoField": "targetMuscles",
          "frontField": "targetMuscles",
          "type": "string[]",
          "rules": ["optional", "json"]
        },
        {
          "entityField": "difficulty",
          "dbColumn": "difficulty",
          "dtoField": "difficulty",
          "frontField": "difficulty",
          "type": "enum",
          "rules": [
            "required",
            "enum:beginner,intermediate,advanced,expert,초급,중급,고급",
            "default:beginner"
          ]
        },
        {
          "entityField": "videoUrl",
          "dbColumn": "video_url",
          "dtoField": "videoUrl",
          "frontField": "videoUrl",
          "type": "string",
          "rules": ["optional", "isUrl", "max:255"]
        },
        {
          "entityField": "isActive",
          "dbColumn": "is_active",
          "dtoField": "isActive",
          "frontField": "isActive",
          "type": "boolean",
          "rules": ["required", "default:true"]
        },
        {
          "entityField": "createdAt",
          "dbColumn": "created_at",
          "dtoField": "createdAt",
          "frontField": "createdAt",
          "type": "Date",
          "rules": ["readonly", "autoGenerate"]
        },
        {
          "entityField": "updatedAt",
          "dbColumn": "updated_at",
          "dtoField": "updatedAt",
          "frontField": "updatedAt",
          "type": "Date",
          "rules": ["readonly", "autoGenerate"]
        }
      ]
    },
    {
      "entity": "Gym",
      "table": "gyms",
      "dto": "GymDTO",
      "frontType": "GymType",
      "relations": {},
      "fields": [
        {
          "entityField": "id",
          "dbColumn": "id",
          "dtoField": "id",
          "frontField": "id",
          "type": "number",
          "rules": ["primaryKey", "autoIncrement"]
        },
        {
          "entityField": "name",
          "dbColumn": "name",
          "dtoField": "name",
          "frontField": "name",
          "type": "string",
          "rules": ["required", "max:255"]
        },
        {
          "entityField": "address",
          "dbColumn": "address",
          "dtoField": "address",
          "frontField": "address",
          "type": "string",
          "rules": ["required", "max:255"]
        },
        {
          "entityField": "phone",
          "dbColumn": "phone",
          "dtoField": "phone",
          "frontField": "phone",
          "type": "string",
          "rules": ["optional"]
        },
        {
          "entityField": "latitude",
          "dbColumn": "latitude",
          "dtoField": "latitude",
          "frontField": "latitude",
          "type": "number",
          "rules": ["optional", "decimal:10,7"]
        },
        {
          "entityField": "longitude",
          "dbColumn": "longitude",
          "dtoField": "longitude",
          "frontField": "longitude",
          "type": "number",
          "rules": ["optional", "decimal:10,7"]
        },
        {
          "entityField": "facilities",
          "dbColumn": "facilities",
          "dtoField": "facilities",
          "frontField": "facilities",
          "type": "string",
          "rules": ["optional"]
        },
        {
          "entityField": "openHour",
          "dbColumn": "open_hour",
          "dtoField": "openHour",
          "frontField": "openHour",
          "type": "string",
          "rules": ["optional"]
        },
        {
          "entityField": "is24Hours",
          "dbColumn": "is_24_hours",
          "dtoField": "is24Hours",
          "frontField": "is24Hours",
          "type": "boolean",
          "rules": ["required", "default:false"]
        },
        {
          "entityField": "hasGX",
          "dbColumn": "has_gx",
          "dtoField": "hasGX",
          "frontField": "hasGX",
          "type": "boolean",
          "rules": ["required", "default:false"]
        },
        {
          "entityField": "hasPT",
          "dbColumn": "has_pt",
          "dtoField": "hasPT",
          "frontField": "hasPT",
          "type": "boolean",
          "rules": ["required", "default:false"]
        },
        {
          "entityField": "hasGroupPT",
          "dbColumn": "has_group_pt",
          "dtoField": "hasGroupPT",
          "frontField": "hasGroupPT",
          "type": "boolean",
          "rules": ["required", "default:false"]
        },
        {
          "entityField": "hasParking",
          "dbColumn": "has_parking",
          "dtoField": "hasParking",
          "frontField": "hasParking",
          "type": "boolean",
          "rules": ["required", "default:false"]
        },
        {
          "entityField": "hasShower",
          "dbColumn": "has_shower",
          "dtoField": "hasShower",
          "frontField": "hasShower",
          "type": "boolean",
          "rules": ["required", "default:false"]
        },
        {
          "entityField": "createdAt",
          "dbColumn": "created_at",
          "dtoField": "createdAt",
          "frontField": "createdAt",
          "type": "Date",
          "rules": ["readonly", "autoGenerate"]
        },
        {
          "entityField": "updatedAt",
          "dbColumn": "updated_at",
          "dtoField": "updatedAt",
          "frontField": "updatedAt",
          "type": "Date",
          "rules": ["readonly", "autoGenerate"]
        }
      ]
    }
  ],
  "rules": {
    "naming": {
      "entity": "PascalCase",
      "dto": "PascalCase",
      "front": "PascalCase",
      "dbColumn": "snake_case"
    },
    "serialization": {
      "date": "ISO8601",
      "json": "stringify"
    },
    "validation": {
      "url": "isUrl",
      "enum": "inArray"
    },
    "relationships": {
      "cascade": [
        "WorkoutSession.exerciseSets",
        "WorkoutPlan.workoutSessions",
        "WorkoutPlan.workoutGoals"
      ],
      "lazy": ["WorkoutSession.exerciseSets", "WorkoutPlan.workoutSessions"],
      "eager": ["ExerciseSet.machine", "WorkoutSession.user"]
    }
  },
  "workoutFeatures": {
    "sessionTracking": {
      "enabled": true,
      "features": [
        "real-time tracking",
        "mood and energy rating",
        "notes and comments",
        "duration calculation"
      ]
    },
    "exerciseManagement": {
      "enabled": true,
      "features": [
        "set tracking",
        "weight and reps recording",
        "RPE rating",
        "distance tracking for cardio"
      ]
    },
    "planning": {
      "enabled": true,
      "features": [
        "workout plan creation",
        "goal setting",
        "progress tracking",
        "reminder system"
      ]
    },
    "analytics": {
      "enabled": true,
      "features": [
        "workout statistics",
        "progress visualization",
        "streak tracking",
        "performance metrics"
      ]
    }
  },
  "projectStatus": {
    "lastUpdated": "2024-12-24T06:00:00Z",
    "workoutModuleStatus": {
      "entities": "COMPLETE",
      "relationships": "COMPLETE",
      "validation": "COMPLETE",
      "apiEndpoints": "IN_PROGRESS",
      "frontendIntegration": "IN_PROGRESS"
    },
    "nextPriorities": [
      "Complete workout session API endpoints",
      "Implement real-time workout tracking",
      "Add workout analytics dashboard",
      "Integrate with machine guide system"
    ]
  }
}
