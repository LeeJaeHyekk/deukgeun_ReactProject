{
  "workout_frontend_structure": {
    "project": "Workout Frontend Structure Analysis & Optimization",
    "description": "기존 구조(combined)와 현재 구조(front) 비교 분석 및 최적화 완료",
    "createdAt": "2025-01-27T00:00:00.000Z",
    "lastUpdated": "2025-01-27T00:00:00.000Z",
    "version": "3.0.0",
    "optimizationStatus": "completed",
    "totalWorkload": "24 hours",
    "phasesCompleted": 4,

    "optimization_summary": {
      "phase_1": {
        "name": "데이터 구조 보완",
        "status": "completed",
        "enhancements": [
          "세션 카드 실시간 상태 추가",
          "진행률 시각화 타입 정의",
          "차트 데이터 구조 보완",
          "캐싱 및 에러 처리 타입 추가"
        ]
      },
      "phase_2": {
        "name": "Zustand 상태관리 통합",
        "status": "completed",
        "enhancements": [
          "실시간 타이머 상태 통합",
          "진행률 상태 관리",
          "캐싱 상태 관리",
          "에러 처리 상태 통합"
        ]
      },
      "phase_3": {
        "name": "컴포넌트 구조 최적화",
        "status": "completed",
        "enhancements": [
          "세션 카드 컴포넌트 개선",
          "진행률 컴포넌트 추가",
          "차트 컴포넌트 상세화",
          "모달 컴포넌트 최적화"
        ]
      },
      "phase_4": {
        "name": "기능 통합 및 테스트",
        "status": "completed",
        "enhancements": [
          "실시간 기능 통합",
          "성능 최적화",
          "테스트 코드 작성",
          "문서화"
        ]
      }
    },

    "key_improvements": {
      "data_structure": {
        "enhanced_types": [
          "SessionCardState",
          "ProgressVisualization",
          "ChartData",
          "CachingState",
          "ErrorFallback",
          "TimerState"
        ],
        "real_time_features": [
          "실시간 타이머 통합",
          "세트 완료 상태 추적",
          "진행률 시각화",
          "완료 조건 체크"
        ]
      },
      "state_management": {
        "unified_zustand": "모든 상태를 Zustand로 통일",
        "real_time_state": "실시간 타이머 및 진행률 상태",
        "caching_system": "캐싱 및 에러 처리 시스템",
        "persistence": "로컬 스토리지 지속성"
      },
      "component_optimization": {
        "session_card": "실시간 타이머 및 진행률 시각화",
        "progress_components": "다양한 진행률 표시 컴포넌트",
        "chart_components": "상세한 차트 및 그래프 정의",
        "modal_components": "완전한 폼 및 필드 정의"
      }
    },

    "architecture": {
      "pattern": "Feature-based Architecture with Zustand State Management",
      "framework": "React + TypeScript + Vite",
      "stateManagement": "Zustand Store with DevTools & Persist",
      "styling": "CSS Modules with Tailwind-like utilities",
      "routing": "React Router v6",
      "structure": "Feature-oriented with shared components"
    },

    "main_components": {
      "WorkoutPage": {
        "file": "WorkoutPage.tsx",
        "description": "메인 워크아웃 페이지 - 탭 기반 레이아웃",
        "layout": {
          "type": "tabbed-layout",
          "tabPosition": "top",
          "responsive": {
            "mobile": "scrollable",
            "tablet": "fixed",
            "desktop": "fixed"
          }
        }
      }
    },

    "tabs": {
      "overview": {
        "component": "OverviewTab",
        "description": "현재 진행중인 운동 계획과 주요 통계를 카드 형태로 표시",
        "type": "card-list",
        "layout": {
          "maxColumns": 3,
          "cardSpacing": "16px",
          "wrap": true,
          "responsive": {
            "mobile": 1,
            "tablet": 2,
            "desktop": 3
          }
        }
      },
      "goals": {
        "component": "GoalsTab",
        "description": "운동 목표와 달성 상태를 보여주며, 목표 추가/수정 가능",
        "type": "card-list",
        "layout": {
          "maxColumns": 2,
          "cardSpacing": "16px",
          "wrap": true,
          "responsive": {
            "mobile": 1,
            "tablet": 2,
            "desktop": 2
          }
        }
      },
      "plans": {
        "component": "PlansTab",
        "description": "새 계획 생성 및 운동 추가 기능 제공",
        "type": "section"
      },
      "sessions": {
        "component": "SessionsTab",
        "description": "사용자가 직접 추가할 수 없으며 이전에 등록된 운동 세션만 표시",
        "type": "card-list",
        "layout": {
          "maxColumns": 3,
          "cardSpacing": "16px",
          "wrap": true,
          "responsive": {
            "mobile": 1,
            "tablet": 2,
            "desktop": 3
          }
        }
      },
      "workoutProgress": {
        "component": "ProgressTab",
        "description": "DB에 저장된 운동 세션 정보를 기반으로 월 단위와 년 단위 진행 상황을 시각화",
        "type": "graph-section",
        "visibility": "internal-only"
      }
    },

    "enhanced_data_types": {
      "SessionCardState": {
        "isActive": "boolean",
        "isRunning": "boolean",
        "currentSet": "number",
        "totalSets": "number",
        "elapsedTime": "number",
        "restTime": "number",
        "progress": "number",
        "completedSets": "number[]"
      },
      "ProgressVisualization": {
        "type": "'sets' | 'time' | 'weight' | 'reps'",
        "currentValue": "number",
        "maxValue": "number",
        "completedValueColor": "string",
        "incompleteValueColor": "string",
        "visualIndicator": "'progressBar' | 'circles' | 'dots'"
      },
      "ChartData": {
        "date": "string",
        "duration": "number",
        "sessions": "number",
        "exercises": "number",
        "completedSets": "number",
        "totalSets": "number",
        "weight": "number",
        "reps": "number"
      },
      "CachingState": {
        "enabled": "boolean",
        "durationMinutes": "number",
        "lastUpdated": "Date",
        "data": "any"
      },
      "ErrorFallback": {
        "message": "string",
        "showPlaceholder": "boolean",
        "retryAction": "() => void"
      },
      "TimerState": {
        "isRunning": "boolean",
        "elapsedTime": "number",
        "totalTime": "number",
        "currentSection": "number",
        "sections": "Array<{ id: number, name: string, duration: number, isCompleted: boolean }>"
      }
    },

    "state_management": {
      "store": "workoutStore.ts",
      "pattern": "Zustand with DevTools & Persist",
      "state_structure": {
        "data": {
          "plans": "WorkoutPlan[]",
          "sessions": "WorkoutSession[]",
          "goals": "WorkoutGoal[]",
          "dashboardData": "DashboardData | null",
          "machines": "Machine[]"
        },
        "loading": {
          "overview": "LoadingState",
          "plans": "LoadingState",
          "sessions": "LoadingState",
          "goals": "LoadingState",
          "progress": "LoadingState",
          "machines": "LoadingState"
        },
        "ui": {
          "activeTab": "TabType",
          "modals": {
            "plan": "WorkoutPlanModalState",
            "session": "WorkoutSessionModalState",
            "goal": "WorkoutGoalModalState"
          },
          "notifications": "Notification[]",
          "globalLoading": "boolean",
          "globalError": "string | null"
        },
        "current": {
          "currentPlan": "WorkoutPlan | null",
          "currentSession": "WorkoutSession | null",
          "currentGoal": "WorkoutGoal | null",
          "activeSessionId": "number | null"
        },
        "tabStates": {
          "overview": {
            "selectedTimeRange": "string",
            "selectedMetrics": "string[]",
            "chartType": "string"
          },
          "plans": {
            "selectedPlanId": "number | null",
            "filterStatus": "string",
            "sortBy": "string",
            "viewMode": "'grid' | 'list'"
          },
          "sessions": {
            "selectedSessionId": "number | null",
            "filterStatus": "string",
            "sortBy": "string",
            "activeSessionId": "number | null"
          },
          "goals": {
            "selectedGoalId": "number | null",
            "filterType": "string",
            "sortBy": "string",
            "showCompleted": "boolean"
          },
          "workoutProgress": {
            "selectedTimeRange": "string",
            "selectedMetric": "string",
            "chartType": "string",
            "comparisonMode": "boolean"
          }
        },
        "realTime": {
          "sessionTimers": "Record<number, TimerState>",
          "activeSessionId": "number | null",
          "globalTimer": {
            "isRunning": "boolean",
            "elapsedTime": "number",
            "totalTime": "number"
          }
        },
        "progress": {
          "sessionProgress": "Record<number, SessionCardState>",
          "goalProgress": "Record<number, number>",
          "planProgress": "Record<number, number>"
        },
        "caching": {
          "dashboard": "CachingState",
          "plans": "CachingState",
          "sessions": "CachingState",
          "goals": "CachingState",
          "progress": "CachingState"
        },
        "errorHandling": {
          "errors": "Record<string, ErrorFallback>",
          "retryCount": "Record<string, number>",
          "lastError": "string | null"
        }
      },
      "actions": {
        "plans": [
          "fetchPlans",
          "createPlan",
          "updatePlan",
          "deletePlan",
          "duplicatePlan",
          "archivePlan"
        ],
        "sessions": [
          "fetchSessions",
          "createSession",
          "updateSession",
          "deleteSession",
          "startSession",
          "pauseSession",
          "completeSession",
          "cancelSession"
        ],
        "goals": [
          "fetchGoals",
          "createGoal",
          "updateGoal",
          "deleteGoal",
          "completeGoal",
          "resetGoal"
        ],
        "dashboard": [
          "fetchDashboardData",
          "refreshDashboard",
          "updateDashboardStats"
        ],
        "machines": ["fetchMachines", "searchMachines", "filterMachines"],
        "ui": [
          "setActiveTab",
          "openPlanModal",
          "closePlanModal",
          "openSessionModal",
          "closeSessionModal",
          "openGoalModal",
          "closeGoalModal",
          "addNotification",
          "removeNotification",
          "clearNotifications",
          "setGlobalError",
          "clearGlobalError"
        ],
        "realTime": [
          "startTimer",
          "pauseTimer",
          "stopTimer",
          "updateTimer",
          "setActiveSession",
          "clearActiveSession"
        ],
        "progress": [
          "updateSessionProgress",
          "updateGoalProgress",
          "updatePlanProgress",
          "resetProgress"
        ],
        "caching": ["setCache", "getCache", "clearCache", "invalidateCache"],
        "errorHandling": [
          "setError",
          "clearError",
          "retryOperation",
          "incrementRetryCount"
        ],
        "tabStates": [
          "updateTabState",
          "resetTabState",
          "setTabFilter",
          "setTabSort"
        ]
      },
      "selectors": {
        "plans": [
          "selectPlans",
          "selectPlanById",
          "selectActivePlans",
          "selectPlansByStatus"
        ],
        "sessions": [
          "selectSessions",
          "selectSessionById",
          "selectActiveSessions",
          "selectSessionsByStatus"
        ],
        "goals": [
          "selectGoals",
          "selectGoalById",
          "selectActiveGoals",
          "selectCompletedGoals"
        ],
        "dashboard": [
          "selectDashboardData",
          "selectDashboardStats",
          "selectRecentSessions",
          "selectActiveGoals"
        ],
        "progress": [
          "selectSessionProgress",
          "selectGoalProgress",
          "selectPlanProgress"
        ],
        "realTime": [
          "selectActiveTimer",
          "selectSessionTimer",
          "selectGlobalTimer"
        ]
      },
      "middleware": {
        "devtools": "zustand/middleware/devtools",
        "persist": "zustand/middleware/persist",
        "immer": "zustand/middleware/immer"
      },
      "persistence": {
        "enabled": "true",
        "storage": "localStorage",
        "partialize": [
          "plans",
          "sessions",
          "goals",
          "dashboardData",
          "tabStates",
          "progress"
        ],
        "exclude": [
          "loading",
          "ui.notifications",
          "realTime",
          "caching",
          "errorHandling"
        ]
      }
    },

    "ui_components": {
      "cards": {
        "WorkoutPlanCard": {
          "realTimeFeatures": [
            "계획 정보 표시",
            "진행률 표시",
            "액션 버튼",
            "반응형 레이아웃"
          ]
        },
        "SessionCard": {
          "realTimeFeatures": [
            "실시간 타이머",
            "세트 완료 상태",
            "진행률 시각화",
            "완료 조건 체크"
          ],
          "progress": {
            "type": "sets",
            "display": "0 → 완료시 검은색",
            "maxValue": "계획된 세트 수",
            "completedValueColor": "black",
            "visualIndicator": "진행바 표시"
          },
          "completion": {
            "type": "button",
            "label": "오운완",
            "trigger": ["카드 삭제", "내용 및 히스토리 DB 저장"],
            "condition": "모든 세트 완료 시 활성화",
            "position": "카드 중앙"
          }
        }
      },
      "timer": {
        "SessionTimer": {
          "features": [
            "실시간 타이머",
            "일시정지/재개",
            "완료 알림",
            "진행률 표시"
          ]
        },
        "RestTimer": {
          "features": ["휴식 시간 타이머", "자동 시작", "건너뛰기 옵션"]
        },
        "GlobalTimer": {
          "features": ["전역 타이머", "세션 간 연속", "총 운동 시간"]
        }
      },
      "progress": {
        "ProgressBar": {
          "features": ["진행률 시각화", "커스터마이징", "애니메이션"]
        },
        "SetProgress": {
          "features": ["세트별 진행률", "완료 상태 표시", "인터랙티브"]
        },
        "GoalProgress": {
          "features": ["목표 진행률", "데드라인 표시", "달성 예측"]
        }
      }
    },

    "api_integration": {
      "endpoints": {
        "dashboard": "/api/workout/dashboard",
        "plans": "/api/workout/plans",
        "sessions": "/api/workout/sessions",
        "goals": "/api/workout/goals",
        "machines": "/api/machines"
      },
      "patterns": {
        "request": "CreateRequest/UpdateRequest interfaces",
        "response": "ApiResponse<T> wrapper",
        "error": "Error handling with user-friendly messages",
        "loading": "Individual loading states per feature"
      }
    },

    "key_features": {
      "authentication": "로그인 상태 확인 및 보호된 라우트",
      "real_time_tracking": "실시간 세션 트래킹 및 타이머",
      "progress_visualization": "차트 및 진행률 시각화",
      "goal_management": "목표 설정 및 달성 추적",
      "plan_management": "운동 계획 생성 및 관리",
      "session_management": "운동 세션 기록 및 분석",
      "responsive_design": "모바일/태블릿/데스크톱 반응형",
      "offline_support": "오프라인 데이터 저장 및 동기화",
      "notifications": "목표 달성 및 세션 알림",
      "data_export": "운동 데이터 내보내기",
      "caching_system": "캐싱 및 에러 처리 시스템",
      "real_time_timers": "실시간 타이머 및 진행률 추적"
    },

    "implementation_guide": {
      "priority_order": [
        "1. Zustand 스토어 설정 및 기본 상태 구조",
        "2. 실시간 타이머 기능 구현",
        "3. 세션 카드 컴포넌트 개선",
        "4. 진행률 시각화 컴포넌트",
        "5. 차트 및 그래프 컴포넌트",
        "6. 캐싱 및 에러 처리 시스템",
        "7. 모달 컴포넌트 최적화",
        "8. API 통합 및 데이터 동기화"
      ],
      "estimated_timeline": {
        "week_1": "기본 구조 및 Zustand 스토어",
        "week_2": "실시간 기능 및 타이머",
        "week_3": "UI 컴포넌트 최적화",
        "week_4": "통합 테스트 및 최적화"
      }
    }
  }
}
